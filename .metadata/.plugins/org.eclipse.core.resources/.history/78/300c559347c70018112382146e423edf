package com.fitbank.middleware.acquirers;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.fitbank.middleware.authorizations.FitIsAut;
import com.fitbank.middleware.cscoreswitch.EngineCallableProcessor;
import com.fitbank.middleware.cscoreswitch.Iso8583;
import com.fitbank.middleware.cscoreswitch.TransactionConfiguration;
import com.fitbank.middleware.cscoreswitch.csProcess;
import com.fitbank.middleware.cscoreswitch.wIso8583;
import com.fitbank.middleware.logger.Logger;
import com.fitbank.middleware.logger.LoggerConfig.TypeMonitor;
import com.fitbank.middleware.memcached.MemoryGlobal;
import com.fitbank.middleware.utils.StringUtils;

public class IVRIsAcq {

	private Logger log;
	
	public IVRIsAcq() {
		this.log = new Logger();
	}
	
	public wIso8583 getValoresPrestamo(wIso8583 iso) {
		
		try {
			List<wIso8583> isoList = new ArrayList<>();
			
			String[] cuentas = iso.getISO_121_ExtendedData().split("\\|");
			for (int i = 0; i < cuentas.length; i++) {
				
				wIso8583 isoClone = (wIso8583) iso.clone();
				isoClone.setWsTransactionConfig((TransactionConfiguration)iso.getWsTransactionConfig().CloneObject());
				isoClone.getWsTransactionConfig().setProccodeTransactionFit(Arrays.asList(isoClone.getWsTransactionConfig()
						.getProccodeTransactionFit().split("\\|")).get(1));
				isoClone.setISO_102_AccountID_1(cuentas[i]);
				isoList.add(isoClone);
				
				ContainerIsoList container = new ContainerIsoList();
				
				EngineCallableProcessor<wIso8583> engine = new EngineCallableProcessor<>(5);
				for (wIso8583 wIso : isoList) {
					FitIsAut aut = new FitIsAut();
					engine.add(aut.callGetInfoValoresCtasPrestamo());
				}
				List<Iso8583> listIsoProc = engine.goProcess();
				
			}
			
		} catch (Exception e) {
			
			log.WriteLogMonitor("Error modulo IVRIsAcq::getValoresPrestamo ", 
					TypeMonitor.error, e);
		}
		return iso;
	}
}
