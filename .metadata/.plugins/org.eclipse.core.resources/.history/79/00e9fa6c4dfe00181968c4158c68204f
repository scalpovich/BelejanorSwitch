package com.fitbank.middleware.implementations.equifax;

import java.io.ByteArrayInputStream;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.apache.cxf.binding.soap.SoapMessage;
import org.apache.cxf.binding.soap.interceptor.AbstractSoapInterceptor;
import org.apache.cxf.interceptor.Fault;
import org.apache.cxf.phase.Phase;
import org.w3c.dom.Document;

import com.fitbank.middleware.struct.equifax.ErrorRegister;
import com.fitbank.middleware.utils.GeneralUtils;
import com.fitbank.middleware.utils.SerializationObject;
import com.fitbank.middleware.utils.StringUtils;

public class CustomSoap11FaultOutInterceptorRegisterEquifax extends AbstractSoapInterceptor{

	public CustomSoap11FaultOutInterceptorRegisterEquifax() {
        super(Phase.MARSHAL);
    }
	@Override
	public void handleMessage(SoapMessage message) throws Fault {
		
		String serializateError = null;
		String xml = null;
		Document doc = null;
		DocumentBuilder builder = null;
		Fault fault = null;
		try {
			builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
		} catch (ParserConfigurationException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		Exception e = message.getContent(Exception.class); 
		if(e.getCause() != null) {
			if(!e.getCause().getClass().toString()
					.equalsIgnoreCase("class javax.xml.bind.UnmarshalException")){
				
				if(e.getCause().getClass().toString()
						.equalsIgnoreCase("class com.fitbank.middleware.struct.equifax.ErrorRegister")){
					
					com.fitbank.middleware.struct.equifax.ErrorRegister eee = (com.fitbank.middleware.struct.equifax.ErrorRegister) e.getCause();
					System.out.println(eee.getCode() + "  " + eee.getDescription());
					try {
						
						fault = (Fault) e; 
		                fault.setMessage("Fault"); 
		                
		                serializateError = SerializationObject.ObjectToString(eee, com.fitbank.middleware.struct.equifax.ErrorRegister.class);
						serializateError = serializateError
	            				.replace("<stackTrace/>", "").replace("\n", "")
	            				.replace(":ns2", "").replace("ns2:", "");
	            		serializateError = GeneralUtils.formatXML(serializateError);
	            		xml = "<detail><Error xmlns=\"http://lorente.fin.ec/RegisterEquifax\"><Code>"+ eee.getCode() +"</Code><Description>"+ eee.getDescription() +"</Description></Error></detail>";
	            		xml = StringUtils.replaceAcentsAndCharsEspecial(xml);
	                    doc = builder.parse(new ByteArrayInputStream(xml.getBytes())); 
	                    fault.setDetail(doc.getDocumentElement()); 
						
					} catch (Exception e2) {
						 System.out.println("Cannot build detail element[0]: " + e.getMessage()); 
					}
					
				}else{
				
			        if (e instanceof Fault) { 
			                fault = (Fault) e; 
			                fault.setMessage("Fault1"); 
			                
			                try { 
			                        
			                	com.fitbank.middleware.struct.equifax.ErrorRegister err = 
			                	    		new com.fitbank.middleware.struct.equifax.ErrorRegister("0909", e.getCause().toString());
			                		serializateError = SerializationObject.ObjectToString(err, ErrorRegister.class);
			                		serializateError = serializateError
			                				.replace("<stackTrace/>", "").replace("\n", "")
			                				.replace(":ns2", "").replace("ns2:", "");
			                		serializateError = GeneralUtils.formatXML(serializateError);
			                		xml = "<detail><Error xmlns=\"http://lorente.fin.ec/RegisterEquifax\"><Code>"+ err.getCode() +"</Code><Description>"+ err.getDescription() +"</Description></Error></detail>";
			                		xml = StringUtils.replaceAcentsAndCharsEspecial(xml);
			                        doc = builder.parse(new ByteArrayInputStream(xml.getBytes())); 
			                        fault.setDetail(doc.getDocumentElement()); 
			                } catch (Exception e1) { 
			                        System.out.println("Cannot build detail element[1]: " + e.getMessage()); 
			                } 
			        } 
				}
			
			}//aqui
		}else {
			
			if(!StringUtils.IsNullOrEmpty(e.getMessage())) {
				
				if (e instanceof Fault) { 
	                fault = (Fault) e; 
	                fault.setMessage("Fault1"); 
	                
	                try { 
	                        
	                	com.fitbank.middleware.struct.equifax.ErrorRegister err = 
	                	    		new com.fitbank.middleware.struct.equifax.ErrorRegister("909", e.getMessage());
	                		serializateError = SerializationObject.ObjectToString(err, ErrorRegister.class);
	                		serializateError = serializateError
	                				.replace("<stackTrace/>", "").replace("\n", "")
	                				.replace(":ns2", "").replace("ns2:", "");
	                		serializateError = GeneralUtils.formatXML(serializateError);
	                		xml = "<detail><Error xmlns=\"http://lorente.fin.ec/RegisterEquifax\"><Code>"+ err.getCode() +"</Code><Description>"+ err.getDescription() +"</Description></Error></detail>";
	                		xml = StringUtils.replaceAcentsAndCharsEspecial(xml);
	                        doc = builder.parse(new ByteArrayInputStream(xml.getBytes())); 
	                        fault.setDetail(doc.getDocumentElement()); 
	                } catch (Exception e1) { 
	                        System.out.println("Cannot build detail element[1]: " + e.getMessage()); 
	                } 
	        } 
			}
		}
	}
}

